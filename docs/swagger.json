{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "title": "Pentest Execution and Reporting Tool (PERT) API",
        "contact": {
            "name": "Fabio Almeida",
            "url": "https://github.com/mentesan",
            "email": "mentesan@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/mentesan/pert-api/blob/main/LICENSE"
        },
        "version": "0.0.1"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/companies": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get companies list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Company"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Update company information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company.ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "All fields are optional",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Add new company",
                "parameters": [
                    {
                        "description": "JSON for new company",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company.ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/companies/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Search company by Name",
                "parameters": [
                    {
                        "description": "For search",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "{ \"name\": \"CompanyName\" }"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get contacts list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Contact"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Update contact information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact.ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "All fields are optional",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Contact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Add new contact",
                "parameters": [
                    {
                        "description": "JSON for new contact",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Contact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete contact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact.ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contacts/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Search contact by FirstName",
                "parameters": [
                    {
                        "description": "For search",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "{ \"name\": \"ContactFirstName\" }"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get projects list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Update project information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project.ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "All fields are optional",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Add new project",
                "parameters": [
                    {
                        "description": "JSON for new project",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project.ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projects/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Search project by Name",
                "parameters": [
                    {
                        "description": "For search",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "{ \"name\": \"ProjectName\" }"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Refresh token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.JWTOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signin": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Sign In User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.JWTOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signout": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Sign out user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get users list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add a new user",
                "parameters": [
                    {
                        "description": "JSON for new user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/:id": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "description": "All fields are optional",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User.ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User.ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/search/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Search user by FirstName",
                "parameters": [
                    {
                        "description": "For search",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "{ \"firstName\": \"UserFirstName\" }"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.JWTOutput": {
            "type": "object",
            "properties": {
                "expires": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.Company": {
            "description": "Company",
            "type": "object",
            "properties": {
                "address": {
                    "description": "Company Address",
                    "type": "string"
                },
                "contacts": {
                    "description": "Contacts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Contact"
                    }
                },
                "description": {
                    "description": "Some important details",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "info": {
                    "description": "Company Info",
                    "type": "string"
                },
                "name": {
                    "description": "Company Name",
                    "type": "string"
                },
                "publishedAt": {
                    "type": "string"
                },
                "site": {
                    "description": "Company Site",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Date of last update",
                    "type": "string"
                }
            }
        },
        "models.Contact": {
            "description": "Company Contacts",
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email",
                    "type": "string"
                },
                "firstName": {
                    "description": "First name",
                    "type": "string"
                },
                "info": {
                    "description": "Info",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone/cel",
                    "type": "string"
                }
            }
        },
        "models.Framework": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "description": "Framework name",
                    "type": "string"
                },
                "phases": {
                    "description": "Pentest phases",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Phase"
                    }
                }
            }
        },
        "models.Phase": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "info": {
                    "description": "Information",
                    "type": "string"
                },
                "name": {
                    "description": "Phase name",
                    "type": "string"
                },
                "status": {
                    "description": "Status of completion\nexample: TODO|DOING|DONE",
                    "type": "string"
                },
                "tools": {
                    "description": "Phase common used tools",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tool"
                    }
                },
                "url": {
                    "description": "URL",
                    "type": "string"
                }
            }
        },
        "models.Project": {
            "type": "object",
            "properties": {
                "companyId": {
                    "description": "Company ID",
                    "type": "string"
                },
                "createdAt": {
                    "description": "Create Time",
                    "type": "string"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "framework": {
                    "description": "Framework to use for the project",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Framework"
                        }
                    ]
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "description": "Project Name",
                    "type": "string"
                },
                "status": {
                    "description": "Status: Approval|Open|Executing|Reporting|Retesting|Done",
                    "type": "string"
                },
                "targets": {
                    "description": "Targets: URL and/or IP",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Target"
                    }
                },
                "type": {
                    "description": "Project type: BlackHat|GrayHat|WhiteHat",
                    "type": "string"
                }
            }
        },
        "models.Target": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "ip": {
                    "description": "Ip address",
                    "type": "string"
                },
                "name": {
                    "description": "Target name",
                    "type": "string"
                },
                "network": {
                    "description": "Network/AS",
                    "type": "string"
                },
                "owner": {
                    "description": "Whois Owner",
                    "type": "string"
                },
                "url": {
                    "description": "URL",
                    "type": "string"
                }
            }
        },
        "models.Tool": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "name": {
                    "description": "Tool name",
                    "type": "string"
                },
                "synopsis": {
                    "description": "Synopsis and examples",
                    "type": "string"
                },
                "url": {
                    "description": "URL for reference",
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "companyId": {
                    "description": "If it's a \"client\" type, it needs to have a company",
                    "type": "string"
                },
                "email": {
                    "description": "User email, used to login",
                    "type": "string"
                },
                "firstName": {
                    "description": "First name",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "type": {
                    "description": "Type: admin|pentester|client",
                    "type": "string"
                }
            }
        }
    }
}